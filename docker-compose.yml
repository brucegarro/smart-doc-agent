services:
  # ---------- Persistence ----------
  db:
    build:
      context: .
      dockerfile: docker/db/Dockerfile
    container_name: doc_db
    environment:
      POSTGRES_USER: ${DB_USER:-doc}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-doc}
      POSTGRES_DB: ${DB_NAME:-docdb}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-doc} -d ${DB_NAME:-docdb}"]
      interval: 5s
      timeout: 3s
      retries: 20

  minio:
    image: minio/minio
    container_name: doc_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Console UI
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7
    container_name: doc_redis
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  # ---------- Model Runtime ----------
  ollama:
    image: ollama/ollama
    container_name: doc_ollama
    ports:
      - "11434:11434"
    volumes:
      - models:/root/.ollama
    environment:
      OLLAMA_KEEP_ALIVE: ${OLLAMA_KEEP_ALIVE:-4h}
      OLLAMA_NUM_PARALLEL: ${OLLAMA_NUM_PARALLEL:-1}
      OLLAMA_NUM_THREADS: ${OLLAMA_NUM_THREADS:-4}
      OLLAMA_CONTEXT_LENGTH: ${OLLAMA_CONTEXT_LENGTH:-4096}
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 30

  # ---------- Application Services ----------
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: doc_app
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_started
    environment:
      # Database
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-doc}
      DB_PASSWORD: ${DB_PASSWORD:-doc}
      DB_NAME: ${DB_NAME:-docdb}
      # Object storage (MinIO S3)
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minio}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-minio123}
      S3_BUCKET: ${S3_BUCKET:-doc-bucket}
      S3_REGION: ${S3_REGION:-us-east-1}
      # Redis
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      # Models - Ollama LLMs
      OLLAMA_BASE: ${OLLAMA_BASE:-http://ollama:11434}
      TEXT_LLM_MODEL: ${TEXT_LLM_MODEL:-qwen2.5:7b-instruct-q4_K_M}
      ANSWER_JUDGE_MODEL: ${ANSWER_JUDGE_MODEL:-qwen2.5:1.5b-instruct-q4_K_M}
      VLM_MODEL: ${VLM_MODEL:-qwen2-vl:7b-instruct-q4_K_M}
      # Embedder (local in-process)
      EMBEDDER_PROVIDER: ${EMBEDDER_PROVIDER:-local}
      EMBEDDER_MODEL: ${EMBEDDER_MODEL:-BAAI/bge-small-en-v1.5}
      EMBEDDER_DEVICE: ${EMBEDDER_DEVICE:-mps}
      EMBEDDER_NORMALIZE: ${EMBEDDER_NORMALIZE:-True}
      # Application settings
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ./src:/app:cached                      # dev bind mount for code
      - ./scripts:/app/scripts:cached          # dev bind mount for scripts
      - ./sql:/app/sql:ro                      # share schema migration scripts
      - ./sample_papers:/app/sample_papers:cached  # sample papers for testing
      - data:/data                             # inputs/outputs
      - models:/root/.cache/huggingface        # share HF cache
      - models:/root/.paddleocr                # share PaddleOCR cache
      - pix2tex-cache:/usr/local/lib/python3.11/site-packages/pix2tex/model/checkpoints  # persist LaTeX OCR weights
    ports:
      - "${APP_PORT:-8080}:8080"  # API endpoint (future)
    stdin_open: true
    tty: true
    command: ["tail", "-f", "/dev/null"]

  worker:
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
    container_name: doc_worker
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_started
    environment:
      # Database
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-doc}
      DB_PASSWORD: ${DB_PASSWORD:-doc}
      DB_NAME: ${DB_NAME:-docdb}
      # Object storage
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minio}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-minio123}
      S3_BUCKET: ${S3_BUCKET:-doc-bucket}
      S3_REGION: ${S3_REGION:-us-east-1}
      # Redis
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_QUEUE_INGEST: ${REDIS_QUEUE_INGEST:-q:ingest}
      REDIS_QUEUE_INDEX: ${REDIS_QUEUE_INDEX:-q:index}
      # Models - Ollama for VLM (math formulas, complex layouts)
      OLLAMA_BASE: ${OLLAMA_BASE:-http://ollama:11434}
      ANSWER_JUDGE_MODEL: ${ANSWER_JUDGE_MODEL:-qwen2.5:1.5b-instruct-q4_K_M}
      VLM_MODEL: ${VLM_MODEL:-qwen2-vl:7b-instruct-q4_K_M}
      # Embedder (local in-process)
      EMBEDDER_PROVIDER: ${EMBEDDER_PROVIDER:-local}
      EMBEDDER_MODEL: ${EMBEDDER_MODEL:-BAAI/bge-small-en-v1.5}
      EMBEDDER_DEVICE: ${EMBEDDER_DEVICE:-mps}
      EMBEDDER_NORMALIZE: ${EMBEDDER_NORMALIZE:-True}
      # OCR settings
      OCR_ENGINE: ${OCR_ENGINE:-paddleocr}
      OCR_LANG: ${OCR_LANG:-en}
      # Worker settings
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      WORKER_CONCURRENCY: ${WORKER_CONCURRENCY:-2}
    volumes:
      - ./src:/app:cached
      - ./sql:/app/sql:ro
      - data:/data
      - models:/root/.cache/huggingface
      - models:/root/.paddleocr                # PaddleOCR model cache
      - pix2tex-cache:/usr/local/lib/python3.11/site-packages/pix2tex/model/checkpoints  # persist LaTeX OCR weights
    command: ["python", "-m", "agent.worker"]

  evaluator:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    profiles:
      - eval
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_started
      app:
        condition: service_started
      worker:
        condition: service_started
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-doc}
      DB_PASSWORD: ${DB_PASSWORD:-doc}
      DB_NAME: ${DB_NAME:-docdb}
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minio}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-minio123}
      S3_BUCKET: ${S3_BUCKET:-doc-bucket}
      S3_REGION: ${S3_REGION:-us-east-1}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_QUEUE_INGEST: ${REDIS_QUEUE_INGEST:-q:ingest}
      REDIS_QUEUE_INDEX: ${REDIS_QUEUE_INDEX:-q:index}
      OLLAMA_BASE: ${OLLAMA_BASE:-http://ollama:11434}
      TEXT_LLM_MODEL: ${TEXT_LLM_MODEL:-qwen2.5:7b-instruct-q4_K_M}
      ANSWER_JUDGE_MODEL: ${ANSWER_JUDGE_MODEL:-qwen2.5:1.5b-instruct-q4_K_M}
      VLM_MODEL: ${VLM_MODEL:-qwen2-vl:7b-instruct-q4_K_M}
      EMBEDDER_PROVIDER: ${EMBEDDER_PROVIDER:-local}
      EMBEDDER_MODEL: ${EMBEDDER_MODEL:-BAAI/bge-small-en-v1.5}
      EMBEDDER_DEVICE: ${EMBEDDER_DEVICE:-mps}
      EMBEDDER_NORMALIZE: ${EMBEDDER_NORMALIZE:-True}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      EVAL_FIXTURES_DIR: /eval/fixtures
      EVAL_RESULTS_DIR: /eval/results
      EVAL_LOG_LEVEL: ${EVAL_LOG_LEVEL:-INFO}
      EVAL_QUICK_MODE: ${EVAL_QUICK_MODE:-true}
      EVAL_APP_HEALTHCHECK_URL: ""
    volumes:
      - ./src:/app:cached
      - ./sql:/app/sql:ro
      - ./eval/fixtures:/eval/fixtures:ro
      - ./eval/results:/eval/results
      - data:/data
      - models:/root/.cache/huggingface
      - models:/root/.paddleocr
      - pix2tex-cache:/usr/local/lib/python3.11/site-packages/pix2tex/model/checkpoints
    command: ["python", "-m", "agent.evaluator.harness"]

volumes:
  pgdata:
    driver: local
  minio-data:
    driver: local
  redis-data:
    driver: local
  models:
    driver: local  # shared cache for Ollama + HF models + PaddleOCR
  data:
    driver: local  # user docs in/out, exports, etc.
  pix2tex-cache:
    driver: local  # shared cache for pix2tex weights
